<div class="container">
    @if (DataSource?.Series?.Any() ?? false)
    {
        <BarChart @ref="chart" TItem="double" />
    }
    else
    {
        <p>No data to show</p>
    }
</div>

@code {
    [Parameter] public ChartVm DataSource { get; set; }
    BarChart<double> chart;
    List<string> Labels;
    List<double> AmountValues;
    List<double> TotalValues;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (chart != null)
            {
                await HandleRedraw();
            }
        }
    }

    async Task HandleRedraw()
    {
        await chart.Clear();

        Labels = DataSource.Series.Select(x => x.Category).ToList();
        AmountValues = DataSource.Series.Select(x => (double)x.Quantity).ToList();
        TotalValues = DataSource.Series.Select(x => x.Value).ToList();

        await chart.AddLabelsDatasetsAndUpdate(Labels, GetLineChartDataset("Total Discount", AmountValues), GetLineChartDataset("Total $", TotalValues));
    }

    List<string> backgroundColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 0.2f), ChartColor.FromRgba(54, 162, 235, 0.2f), ChartColor.FromRgba(255, 206, 86, 0.2f), ChartColor.FromRgba(75, 192, 192, 0.2f), ChartColor.FromRgba(153, 102, 255, 0.2f), ChartColor.FromRgba(255, 159, 64, 0.2f) };
    List<string> borderColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 1f), ChartColor.FromRgba(54, 162, 235, 1f), ChartColor.FromRgba(255, 206, 86, 1f), ChartColor.FromRgba(75, 192, 192, 1f), ChartColor.FromRgba(153, 102, 255, 1f), ChartColor.FromRgba(255, 159, 64, 1f) };

    private BarChartDataset<double> GetLineChartDataset(string title, List<double> values)
    {
        return new BarChartDataset<double>
        {
            Label = title,
            Data = values,
            BackgroundColor = backgroundColors,
            BorderColor = borderColors
        };
    }
}
